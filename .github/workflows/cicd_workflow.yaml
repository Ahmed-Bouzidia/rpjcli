name: workflow for the rpj CI CD

on:
  push:
    branches:
      - dev

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: python src/personnage.py

  testjob:
    needs: [build]
    name: testjob
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: python test/test.py

  push_to_main:
    needs: [testjob]
    runs-on: ubuntu-latest
    if: ${{ needs.testjob.status == 'success' }}  # Ne s'exécutera que si le job 'test' réussit

    steps:
      - name: Push to main branch
        if: github.ref == 'refs/heads/dev'  # Ne s'exécutera que si la branche actuelle est 'dev'
        run: |
          git checkout main
          git pull origin main
          git push origin main

      - name: Pull from dev branch locally
        if: github.ref == 'refs/heads/dev'  # Ne s'exécutera que si la branche actuelle est 'dev'
        run: |
          git checkout dev
          git pull origin dev

  handle_failure:
    needs: [testjob]
    runs-on: ubuntu-latest
    if: ${{ needs.testjob.status != 'success' }}  # S'exécutera seulement si le job 'test' échoue

    steps:
      - name: Create unique failure branch
        run: |
          FAILURE_BRANCH="failure-$(date +%s)"
          git checkout -b $FAILURE_BRANCH
          git reset --hard dev
          git push origin $FAILURE_BRANCH

      - name: Push to dev branch
        run: |
          git checkout dev
          git pull origin dev
          git merge --no-ff $FAILURE_BRANCH
          git push origin dev

      - name: Pull from dev branch locally after failure
        run: |
          git checkout dev
          git pull origin dev

